{"version":3,"sources":["ServiceApi/Index.js","Component/SearchResults.js","Component/Pengaturan.js","Component/Navbar.js","Component/Home.js","App.js","serviceWorker.js","index.js"],"names":["RoothPath","API","CariOrang","data","path","Promise","resolve","reject","Axios","get","then","res","catch","er","GET_ID_VAL","GetPengaturan","err","PostHadir","post","POST","SearchResults","props","options","map","r","Card","className","key","id","Row","Col","md","Img","variant","src","foto","Body","Title","nama","Text","ucapan","Container","style","fontWeight","Pengaturan","state","url","ListPengaturan","this","marginTop","nama_web","lineHeight","nama_pengantin","tempat_tanggal","width","alt","border","WebkitBorderImage","alamat","Component","lines","length","radius","scale","corners","color","opacity","rotate","direction","speed","trail","fps","zIndex","top","left","shadow","hwaccel","position","Navigationbar","handlerChange","event","setState","target","name","value","componentDidMount","setTimeout","loading","handlerSubmit","preventDefault","query","results","console","log","NotificationManager","success","warning","LoginUrl","bind","Navbar","expand","backgroundColor","height","Brand","href","size","Toggle","aria-controls","Collapse","Form","onSubmit","inline","FormControl","type","ref","input","search","onChange","placeholder","required","autoFocus","Button","Nav","NavItem","Home","App","basename","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.92fda0b5.chunk.js","sourcesContent":["import Axios from 'axios'\r\n\r\nconst RoothPath = \"http://localhost/wedding-cireact/api/\"\r\n\r\nconst GET = (path) => {\r\n    const promise = new Promise((resolve,reject)=>{\r\n        Axios.get(RoothPath+path).then(res=>{\r\n            resolve(res.data.data)\r\n        },err=>{\r\n            reject(err)\r\n        })\r\n    })\r\n    return promise\r\n}\r\n\r\nconst GET_ID_VAL = (path,data) => {\r\n    const promise = new Promise((resolve,reject) => {\r\n        Axios.get(RoothPath+path+data).then(res => {\r\n            resolve(res.data.data)\r\n        }).catch(er => {\r\n            reject(er)\r\n        })\r\n    })\r\n    return promise\r\n}\r\n\r\nconst POST = (path,data) =>{\r\n    const promise = new Promise((resolve,reject)=>{\r\n         Axios.post(RoothPath+path,data).then(res=>{\r\n             resolve(res.data)\r\n         },err=>{\r\n             reject(err)\r\n         })\r\n    })\r\n    return promise\r\n }\r\n\r\nconst CariOrang = (data) => GET_ID_VAL('SearchController?id=',data)\r\nconst GetPengaturan = () => GET('PengaturanController')\r\nconst PostHadir = (data) => POST('HadirController',data)\r\n\r\nconst API = {\r\n    CariOrang,\r\n    GetPengaturan,\r\n    PostHadir\r\n}\r\n\r\nexport default API","import React from 'react'\r\nimport {Container,Card, Row, Col} from 'react-bootstrap'\r\n\r\nconst url = 'http://localhost/wedding-cireact/assets/images/photos/'\r\nconst SearchResults = (props) => {\r\n  const options = props.data.map(r => (\r\n \r\n    <Card className=\"shadow\" key={r.id}>\r\n      <Row className=\"no-gutters\">\r\n      <Col md=\"4\">\r\n        <Card.Img variant=\"top\" src={url+r.foto} />\r\n      </Col>\r\n      <Col md=\"8\">\r\n        <Card.Body>\r\n        <Card.Title><h1 className=\"display-2\">{r.nama}</h1></Card.Title>\r\n        <hr className=\"mt-2 mb-3\"/>\r\n        <Card.Text>\r\n        <em className=\"h3\">{r.ucapan}</em>\r\n        </Card.Text>\r\n        </Card.Body>\r\n      </Col>\r\n      \r\n      </Row>\r\n  \r\n  \r\n</Card>\r\n    \r\n  ))\r\n  return <Container>\r\n    <h1 className=\"display-2 text-center\" style={{fontWeight:'700'}}>Selamat Datang Bapak/Ibu</h1><hr className=\"mt-2 mb-3\"/>{options}</Container>\r\n}\r\n\r\nexport default SearchResults","import React, { Component } from 'react'\r\nimport { Container} from 'react-bootstrap';\r\n\r\nclass Pengaturan extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            url : 'http://localhost/wedding-cireact/assets/images/'\r\n        }\r\n    }\r\n    render() {\r\n        const ListPengaturan = this.props.data.map(res => (\r\n        <div key={res.id} >\r\n                \r\n        <div className=\"mx-auto text-center\" style={{marginTop: '-5px'}} >\r\n        <h1 className=\"text-center mb-0\" style={{fontWeight:'600'}}>{res.nama_web}</h1>\r\n        <h1 className=\"text-center display-2 mb-0\" style={{lineHeight: '45px',fontWeight:'700'}}>{res.nama_pengantin}</h1>\r\n        <h5 className=\"text-center mt-2 mb-0\"><strong>{res.tempat_tanggal}</strong></h5>\r\n        <img className=\"img-fluid mt-3 mb-3\" width=\"600\" src={this.state.url+res.foto} alt='' style={{border: '28px solid transparent',WebkitBorderImage: \"url('border-image-6.svg') 30 35 stretch\"}}/>\r\n        <h6><strong>{res.alamat}</strong></h6>\r\n        </div>\r\n\r\n                \r\n                \r\n        </div>\r\n        ))\r\n        return (\r\n            <>\r\n                <Container>\r\n                    {ListPengaturan}\r\n                </Container>   \r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Pengaturan","import React,{Component} from 'react'\r\n//import {NavLink} from 'react-router-dom'\r\nimport API from '../ServiceApi/Index'\r\nimport Loader from 'react-loader'\r\nimport SearchResults from './SearchResults'\r\nimport Pengaturan from './Pengaturan'\r\nimport {Navbar, Nav, NavItem, Button, Form, FormControl} from 'react-bootstrap'\r\nimport {ThreeDotsVertical, BoxArrowInRight, Search} from 'react-bootstrap-icons'\r\nimport { NotificationManager } from 'react-notifications'\r\n \r\nvar options = {\r\n  lines: 13,\r\n  length: 20,\r\n  width: 10,\r\n  radius: 30,\r\n  scale: 0.35,\r\n  corners: 1,\r\n  color: '#fff',\r\n  opacity: 0.25,\r\n  rotate: 0,\r\n  direction: 1,\r\n  speed: 1,\r\n  trail: 60,\r\n  fps: 20,\r\n  zIndex: 2e9,\r\n  top: '50%',\r\n  left: '50%',\r\n  shadow: false,\r\n  hwaccel: false,\r\n  position: 'absolute'\r\n};\r\nclass Navigationbar extends Component{\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n        query: '',\r\n        results: [],\r\n        Pengaturan: [],\r\n        loading: true,\r\n        LoginUrl:'http://localhost/wedding-cireact/login'\r\n      }\r\n      this.handlerChange = this.handlerChange.bind(this)\r\n        this.handlerSubmit = this.handlerSubmit.bind(this)\r\n    }\r\n    handlerChange = (event) => {\r\n      this.setState({\r\n          [event.target.name] : event.target.value\r\n      })\r\n    }\r\n\r\n  componentDidMount = () => {\r\n      API.GetPengaturan().then(res => {\r\n        setTimeout(() => this.setState({\r\n              Pengaturan: res,\r\n              loading: false\r\n         }), 100);\r\n      })\r\n }\r\n      \r\nhandlerSubmit = (event) => {\r\n  event.preventDefault()\r\n  //console.log(event)\r\n  const query=this.state.query\r\n  API.CariOrang(query).then(res=>{\r\n    //console.log(res)\r\n    setTimeout(() => {\r\n    if (res.length > 0) {\r\n      this.setState({\r\n        results: res,\r\n        loading: false\r\n      })\r\n      API.PostHadir(this.state).then(res => {\r\n        console.log(res)\r\n      });\r\n      NotificationManager.success('Berhasil, selamat datang tamu undangan');\r\n    } else {\r\n      this.setState({\r\n        results: res,\r\n        loading: false\r\n      })\r\n      NotificationManager.warning('Perhatian, nomor tamu undangan tidak ada');\r\n    }\r\n   }, 100);\r\n      \r\n  })\r\n \r\n  \r\n}\r\n\r\n  render(){\r\n    \r\n        return(\r\n       <>\r\n\r\n        <Navbar className=\"shadow mb-3\" variant=\"dark\" expand=\"lg\" style={{backgroundColor:\"#B68364\",height:\"60px\"}}>\r\n        <Navbar.Brand href=\"./\" alt=\"\"><ThreeDotsVertical size=\"34\"/></Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            \r\n          <Form onSubmit={this.handlerSubmit} inline>\r\n            <FormControl \r\n            type=\"text\" \r\n            name=\"query\" \r\n            ref={input => this.search = input}\r\n            onChange={this.handlerChange} \r\n            placeholder=\"Scan QR Code...\" \r\n            className=\"mr-sm-2\" required autoFocus={true} />\r\n            <Button type=\"submit\" variant=\"warning\"><Search size=\"18\"/></Button>\r\n          </Form>\r\n\r\n            \r\n          <Nav className=\"ml-auto\">\r\n\r\n        <NavItem className=\"navItem\">\r\n          <a className=\"btn btn-primary\" href={this.state.LoginUrl}><BoxArrowInRight size=\"18\"/> Login</a>\r\n        </NavItem>\r\n\r\n        </Nav>\r\n\r\n        </Navbar.Collapse>\r\n        </Navbar>\r\n                  \r\n                  \r\n        {this.state.results.length > 0 ? (\r\n            \r\n            (this.state.loading\r\n            ?\r\n            <Loader options={options} className=\"spinner\" />\r\n            :\r\n            \r\n             <SearchResults data={this.state.results} />\r\n            )\r\n            \r\n        ): (\r\n\r\n          (this.state.loading\r\n            ?\r\n            <Loader options={options} className=\"spinner\" />\r\n            :\r\n            \r\n            <Pengaturan data={this.state.Pengaturan} />\r\n            \r\n          )\r\n              \r\n        )}\r\n        </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navigationbar","import React, { Component } from 'react'\r\nimport Navbar from './Navbar'\r\n\r\nclass Home extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n               \r\n               <Navbar />\r\n\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home","import React from 'react';\r\nimport {BrowserRouter,Route} from 'react-router-dom'\r\nimport Home from './Component/Home';\r\nimport { NotificationContainer } from 'react-notifications';\r\nimport ScrollToTop from 'react-router-scroll-top';\r\n \r\nfunction App() {\r\n  return (\r\n    <BrowserRouter basename=\"/wedding-cireact\">\r\n    <ScrollToTop>\r\n        <Route path=\"/\" exact component={Home} />\r\n        <NotificationContainer />\r\n    </ScrollToTop>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'argon-design-system-react/src/assets/css/argon-design-system-react.css';\r\nimport './index.css';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}